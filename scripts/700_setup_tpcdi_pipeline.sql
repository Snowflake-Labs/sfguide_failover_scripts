use role sysadmin;

-- Create dynamic table warehouse
CREATE WAREHOUSE IF NOT EXISTS TPCDI_DT_WH WITH WAREHOUSE_SIZE = 'XLARGE' WAREHOUSE_TYPE = 'STANDARD' AUTO_SUSPEND = 60 AUTO_RESUME = TRUE MIN_CLUSTER_COUNT = 1 MAX_CLUSTER_COUNT = 5 SCALING_POLICY = 'STANDARD';

-- Create staging database and schema
CREATE OR REPLACE DATABASE TPCDI_STG;
CREATE OR REPLACE SCHEMA TPCDI_STG.BASE;

-- Create formats for data loading
-- Date Stage, Status Type Stage
CREATE OR REPLACE FILE FORMAT TPCDI_STG.BASE.TXT_PIPE COMPRESSION = 'AUTO' FIELD_DELIMITER = '|' RECORD_DELIMITER = '\n' SKIP_HEADER = 0 FIELD_OPTIONALLY_ENCLOSED_BY = 'NONE' TRIM_SPACE = FALSE ERROR_ON_COLUMN_COUNT_MISMATCH = TRUE ESCAPE = 'NONE' ESCAPE_UNENCLOSED_FIELD = '\134' DATE_FORMAT = 'AUTO' TIMESTAMP_FORMAT = 'AUTO' NULL_IF = ('\\n') ;

-- FINWIRE Staging Table
CREATE OR REPLACE FILE FORMAT TPCDI_STG.BASE.TXT_FIXED_WIDTH TYPE = CSV COMPRESSION = 'AUTO' FIELD_DELIMITER = NONE RECORD_DELIMITER = '\n' SKIP_HEADER = 0 TRIM_SPACE = FALSE ERROR_ON_COLUMN_COUNT_MISMATCH = TRUE NULL_IF = ('\\n') ;

-- Create external stage
USE SCHEMA TPCDI_STG.BASE;

CREATE OR REPLACE STAGE TPCDI_STG.BASE.TPCDI_EXTERNAL
URL = 's3://sfc-demo-data-public/cross-cloud-business-continuity-quickstart/tpcdi-scale100'
STORAGE_INTEGRATION = S3_PIPELINE_INT;

list @tpcdi_stg.base.tpcdi_external;

-- Create internal stage 
CREATE OR REPLACE STAGE TPCDI_STG.BASE.TPCDI_FILES
  DIRECTORY = (ENABLE = TRUE);

--
-- LOAD into the INTERNAL STAGE using the SnowSQL PUT command
--
-- snowsql -a myorganization-myaccount -u snowgrid -f /tmp/scripts/snowsql/tpcdi_load.sql -o output_format=csv -o output_file=output_file.csv
--

ALTER STAGE TPCDI_STG.BASE.TPCDI_FILES REFRESH;

SELECT * FROM DIRECTORY(@TPCDI_STG.BASE.TPCDI_FILES);

-- Create table objects in TPCDI_STG.BASE schema
CREATE OR REPLACE TABLE TPCDI_STG.BASE.DATE_STG (
	SK_DATEID NUMBER(38,0) COMMENT 'SURROGATE KEY FOR THE DATE',
	DATEVALUE VARCHAR(20) COMMENT 'THE DATE AS TEXT, E.G. "2004-07-07"',
	DATEDESC VARCHAR(20) COMMENT 'THE DATE MONTH DAY, YYYY, E.G. JULY 7, 2004',
	CALENDARYEARID NUMBER(4,0) COMMENT 'YEAR NUMBER AS A NUMBER',
	CALENDARYEARDESC VARCHAR(20) COMMENT 'YEAR NUMBER AS TEXT',
	CALENDARQTRID NUMBER(5,0) COMMENT 'QUARTER AS A NUMBER, E.G. 20042',
	CALENDARQTRDESC VARCHAR(20) COMMENT 'QUARTER AS TEXT, E.G. "2004 Q2"',
	CALENDARMONTHID NUMBER(6,0) COMMENT 'MONTH AS A NUMBER, E.G. 20047',
	CALENDARMONTHDESC VARCHAR(20) COMMENT 'MONTH AS TEXT, E.G. "2004 JULY"',
	CALENDARWEEKID NUMBER(6,0) COMMENT 'WEEK AS A NUMBER, E.G. 200428',
	CALENDARWEEKDESC VARCHAR(20) COMMENT 'WEEK AS TEXT, E.G. "2004-W28"',
	DAYOFWEEKNUM NUMBER(1,0) COMMENT 'DAY OF WEEK AS A NUMBER, E.G. 3',
	DAYOFWEEKDESC VARCHAR(10) COMMENT 'DAY OF WEEK AS TEXT, E.G. "WEDNESDAY"',
	FISCALYEARID NUMBER(4,0) COMMENT 'FISCAL YEAR AS A NUMBER, E.G. 2005',
	FISCALYEARDESC VARCHAR(20) COMMENT 'FISCAL YEAR AS TEXT, E.G. "2005"',
	FISCALQTRID NUMBER(5,0) COMMENT 'FISCAL QUARTER AS A NUMBER, E.G. 20051',
	FISCALQTRDESC VARCHAR(20) COMMENT 'FISCAL QUARTER AS TEXT, E.G. "2005 Q1"',
	HOLIDAYFLAG BOOLEAN COMMENT 'INDICATES HOLIDAYS'
);
CREATE OR REPLACE TABLE TPCDI_STG.BASE.FINWIRE_STG (
	PTS VARCHAR(15) COMMENT 'POSTING DATE & TIME AS YYYYMMDD-HHMMSS - FIN, CMP, SEC',
	REC_TYPE VARCHAR(3) COMMENT '"FIN", \"CMP\", OR \"SEC\" - FIN, CMP, SEC',
	COMPANY_NAME VARCHAR(60) COMMENT 'NAME OF THE COMPANY - CMP',
	CIK VARCHAR(10) COMMENT 'COMPANY IDENTIFICATION CODE FROM SEC - CMP',
	STATUS VARCHAR(4) COMMENT 'ACTV FOR ACTIVE COMPANY, INAC FOR INACTIVE - CMP, SEC',
	INDUSTRY_ID VARCHAR(2) COMMENT 'CODE FOR INDUSTRY SEGMENT - CMP',
	SP_RATING VARCHAR(4) COMMENT 'S&P RATING - CMP',
	FOUNDING_DATE VARCHAR(8) COMMENT 'A DATE AS YYYYMMDD - CMP',
	ADDR_LINE1 VARCHAR(80) COMMENT 'MAILING ADDRESS - CMP',
	ADDR_LINE2 VARCHAR(80) COMMENT 'MAILING ADDRESS - CMP',
	POSTAL_CODE VARCHAR(12) COMMENT 'MAILING ADDRESS - CMP',
	CITY VARCHAR(25) COMMENT 'MAILING ADDRESS - CMP',
	STATE_PROVINCE VARCHAR(20) COMMENT 'MAILING ADDRESS - CMP',
	COUNTRY VARCHAR(24) COMMENT 'MAILING ADDRESS - CMP',
	CEO_NAME VARCHAR(46) COMMENT 'NAME OF COMPANY CEO - CMP',
	DESCRIPTION VARCHAR(150) COMMENT 'DESCRIPTION OF THE COMPANY - CMP',
	YEAR VARCHAR(4) COMMENT 'YEAR OF THE QUARTER END. - FIN',
	QUARTER VARCHAR(1) COMMENT 'QUARTER NUMBER: VALID VALUES ARE 1, 2, 3, 4 - FIN',
	QTR_START_DATE VARCHAR(8) COMMENT 'START DATE OF QUARTER, AS YYYYMMDD - FIN',
	POSTING_DATE VARCHAR(8) COMMENT 'POSTING DATE OF QUARTERLY REPORT AS YYYYMMDD - FIN',
	REVENUE VARCHAR(17) COMMENT 'REPORTED REVENUE FOR THE QUARTER - FIN',
	EARNINGS VARCHAR(17) COMMENT 'NET EARNINGS REPORTED FOR THE QUARTER - FIN',
	EPS VARCHAR(12) COMMENT 'BASIC EARNINGS PER SHARE FOR THE QUARTER - FIN',
	DILUTED_EPS VARCHAR(12) COMMENT 'DILUTED EARNINGS PER SHARE FOR THE QUARTER - FIN',
	MARGIN VARCHAR(12) COMMENT 'PROFIT DIVIDED BY REVENUES FOR THE QUARTER - FIN',
	INVENTORY VARCHAR(17) COMMENT 'VALUE OF INVENTORY ON HAND AT END OF QUARTER - FIN',
	ASSETS VARCHAR(17) COMMENT 'VALUE OF TOTAL ASSETS AT THE END OF QUARTER - FIN',
	LIABILITIES VARCHAR(17) COMMENT 'VALUE OF TOTAL LIABILITIES AT THE END OF QUARTER - FIN',
	SH_OUT VARCHAR(13) COMMENT 'AVERAGE NUMBER OF SHARES OUTSTANDING - FIN, SEC',
	DILUTED_SH_OUT VARCHAR(13) COMMENT 'AVERAGE NUMBER OF SHARES OUTSTANDING (DILUTED) - FIN',
	CO_NAME_OR_CIK VARCHAR(60) COMMENT 'COMPANY CIK NUMBER (IF ONLY DIGITS, 10 VARCHARS) OR NAME (IF NOT ONLY DIGITS, 60 VARCHARS) - FIN, SEC',
	SYMBOL VARCHAR(15) COMMENT 'SECURITY SYMBOL - SEC',
	ISSUE_TYPE VARCHAR(6) COMMENT 'ISSUE TYPE - SEC',
	NAME VARCHAR(70) COMMENT 'SECURITY NAME - SEC',
	EX_ID VARCHAR(6) COMMENT 'ID OF THE EXCHANGE THE SECURITY IS TRADED ON - SEC',
	FIRST_TRADE_DATE VARCHAR(8) COMMENT 'DATE OF FIRST TRADE AS YYYYMMDD - SEC',
	FIRST_TRADE_EXCHG VARCHAR(8) COMMENT 'DATE OF FIRST TRADE ON EXCHANGE AS YYYYMMDD - SEC',
	DIVIDEND VARCHAR(12) COMMENT 'DIVIDEND AS VALUE_T - SEC'
);

CREATE OR REPLACE TABLE TPCDI_STG.BASE.INDUSTRY_STG (
	IN_ID VARCHAR(2) COMMENT 'INDUSTRY CODE',
	IN_NAME VARCHAR(50) COMMENT 'INDUSTRY DESCRIPTION',
	IN_SC_ID VARCHAR(4) COMMENT 'SECTOR IDENTIFIER'
);
ALTER TABLE TPCDI_STG.BASE.INDUSTRY_STG SET CHANGE_TRACKING = TRUE;

CREATE OR REPLACE TABLE TPCDI_STG.BASE.STATUSTYPE_STG (
	ST_ID VARCHAR(4) COMMENT 'STATUS CODE',
	ST_NAME VARCHAR(10) COMMENT 'STATUS DESCRIPTION'
);
CREATE OR REPLACE TABLE TPCDI_STG.BASE.LOAD_PLAN (
	BATCH NUMBER, 
	STEP NUMBER, 
	STMT STRING, 
	SCALE NUMBER
);

-- Create helper procs
-- Drop all DTs in tpcdi_stg.base
CREATE OR REPLACE PROCEDURE TPCDI_STG.BASE.DROP_ALL_DT()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
AS 'declare
    res RESULTSET default (show dynamic tables);
    c1 CURSOR for res;
begin
    for record in c1 do
        execute immediate ''drop dynamic table '' || record."name" ;
    end for;
    return ''All dynamic tables dropped.'';
end';

-- Load all tpcdi_stg.base tables; valid scale_val values are '5' and '100'; valid batch_val values are '1', '2', and '3'
-- TODO: use a counter that increments the year (1967-2017), with system.wait(30s)
-- Wrap this in a task that runs once a day
-- Establish baseline of rows per year, so we can compare to replica after rerunning pipeline
CREATE OR REPLACE PROCEDURE TPCDI_STG.BASE.LOAD_ALL("SCALE_VAL" VARCHAR(16777216), "BATCH_VAL" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
AS 'declare
    load_stmt varchar;
begin
    load_stmt := ''select stmt from tpcdi_stg.base.load_plan where scale = '' || scale_val || '' and batch = '' || batch_val || '' order by step'';
    let res RESULTSET := (execute immediate :load_stmt);
    let c1 CURSOR for res;
	 for record in c1 do
        execute immediate record.stmt ;
    end for;
    return ''All stg tables loaded for batch '' || batch_val ;
end';

-- Truncate all tables in tpcdi_stg.base
CREATE OR REPLACE PROCEDURE TPCDI_STG.BASE.TRUNCATE_STAGE()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
AS 'declare
    res RESULTSET default (show tables like \'%stg\');
    c1 CURSOR for res;
begin
    for record in c1 do
        execute immediate ''truncate table '' || record."name" ;
    end for;
    return ''All stage tables truncated.'';
end';

--
-- Populate LOAD_PLAN table for batch1, batch2, batch3, batch4, batch5
--
TRUNCATE TABLE TPCDI_STG.BASE.LOAD_PLAN;

-- Scale 5, Batch 1
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
 (1,1,$$COPY INTO TPCDI_STG.BASE.DATE_STG FROM @TPCDI_FILES/tpcdi-scale5/batch1/Date.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE')$$,5)
,(1,3,$$COPY INTO TPCDI_STG.BASE.STATUSTYPE_STG FROM @TPCDI_FILES/tpcdi-scale5/batch1/StatusType.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE')$$,5)
,(1,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_FILES/tpcdi-scale5/batch1/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,5)
,(1,2,$$COPY INTO TPCDI_STG.BASE.INDUSTRY_STG FROM @TPCDI_FILES/tpcdi-scale5/batch1/Industry.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE')$$,5);

-- Scale 10, Batch 1
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
 (1,1,$$COPY INTO TPCDI_STG.BASE.DATE_STG FROM @TPCDI_FILES/tpcdi-scale10/batch1/Date.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE')$$,10)
,(1,3,$$COPY INTO TPCDI_STG.BASE.STATUSTYPE_STG FROM @TPCDI_FILES/tpcdi-scale10/batch1/StatusType.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE')$$,10)
,(1,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_FILES/tpcdi-scale10/batch1/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,10)
,(1,2,$$COPY INTO TPCDI_STG.BASE.INDUSTRY_STG FROM @TPCDI_FILES/tpcdi-scale10/batch1/Industry.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE')$$,10);

-- External Stage: Scale 100, Batch 1
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
 (1,1,$$COPY INTO TPCDI_STG.BASE.DATE_STG FROM @TPCDI_EXTERNAL/batch1/Date.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE')$$,100)
,(1,3,$$COPY INTO TPCDI_STG.BASE.STATUSTYPE_STG FROM @TPCDI_EXTERNAL/batch1/StatusType.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE')$$,100)
,(1,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_EXTERNAL/batch1/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,100)
,(1,2,$$COPY INTO TPCDI_STG.BASE.INDUSTRY_STG FROM @TPCDI_EXTERNAL/batch1/Industry.txt FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE')$$,100);

-- Batch 2
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
(2,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_FILES/tpcdi-scale5/batch2/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,5);
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
(2,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_FILES/tpcdi-scale10/batch2/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,10);
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
(2,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_EXTERNAL/batch2/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,100);

-- Batch 3
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
(3,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_FILES/tpcdi-scale5/batch3/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,5);
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
(3,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_FILES/tpcdi-scale10/batch3/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,10);
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
(3,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_EXTERNAL/batch3/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,100);

-- Batch 4
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
(4,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_FILES/tpcdi-scale5/batch4/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,5);
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
(4,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_FILES/tpcdi-scale10/batch4/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,10);
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
(4,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_EXTERNAL/batch4/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,100);

-- Batch 5
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
(5,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_FILES/tpcdi-scale5/batch5/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,5);
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
(5,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_FILES/tpcdi-scale10/batch5/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,10);
INSERT INTO TPCDI_STG.BASE.LOAD_PLAN VALUES
(5,8,$$COPY INTO TPCDI_STG.BASE.FINWIRE_STG FROM ( SELECT   SUBSTR($1, 0, 15) PTS,   SUBSTR($1, 16, 3) REC_TYPE,   SUBSTR($1, 19, 60) COMPANY_NAME,   SUBSTR($1, 79, 10) CIK,   IFF(SUBSTR($1, 16, 3) = 'CMP', SUBSTR($1, 89, 4),SUBSTR($1, 40, 4))  STATUS,   SUBSTR($1, 93, 2) INDUSTRY_ID,   SUBSTR($1, 95, 4) SP_RATING,   SUBSTR($1, 99, 8) FOUNDING_DATE,   SUBSTR($1, 107, 80) ADDR_LINE1,   SUBSTR($1, 187, 80) ADDR_LINE2,   SUBSTR($1, 267, 12) POSTAL_CODE,   SUBSTR($1, 279, 25) CITY,   SUBSTR($1, 304, 20) STATE_PROVINCE,   SUBSTR($1, 324, 24) COUNTRY,   SUBSTR($1, 348, 46) CEO_NAME,   SUBSTR($1, 394, 150) DESCRIPTION,   SUBSTR($1, 19, 4) YEAR,   SUBSTR($1, 23, 1) QUARTER,   SUBSTR($1, 24, 8) QTR_START_DATE,   SUBSTR($1, 32, 8) POSTING_DATE,   SUBSTR($1, 40, 17) REVENUE,   SUBSTR($1, 57, 17) EARNINGS,   SUBSTR($1, 74, 12) EPS,   SUBSTR($1, 86, 12) DILUTED_EPS,   SUBSTR($1, 98, 12) MARGIN,   SUBSTR($1, 110, 17) INVENTORY,   SUBSTR($1, 127, 17) ASSETS,   SUBSTR($1, 144, 17) LIABILITIES,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 161, 13), SUBSTR($1, 120, 13)) SH_OUT,   SUBSTR($1, 174, 13) DILUTED_SH_OUT,   IFF(SUBSTR($1, 16, 3) = 'FIN', SUBSTR($1, 187, 60), SUBSTR($1, 161, 60)) CO_NAME_OR_CIK,   SUBSTR($1, 19, 15) SYMBOL,   SUBSTR($1, 34, 6) ISSUE_TYPE,   SUBSTR($1, 44, 70) NAME,   SUBSTR($1, 114, 6) EX_ID,   SUBSTR($1, 133, 8) FIRST_TRADE_DATE,   SUBSTR($1, 141, 8) FIRST_TRADE_EXCHG,   SUBSTR($1, 149, 12) DIVIDEND FROM @TPCDI_EXTERNAL/batch5/FINWIRE) FILE_FORMAT = (FORMAT_NAME = 'TXT_FIXED_WIDTH')$$,100);

-- Now review the LOAD_PLAN table
SELECT SCALE, BATCH, STEP, STMT FROM TPCDI_STG.BASE.LOAD_PLAN ORDER BY SCALE, BATCH, STEP;

-- Create ods database and schema
CREATE OR REPLACE DATABASE TPCDI_ODS;
CREATE OR REPLACE SCHEMA TPCDI_ODS.BASE;

-- Create ods helper procs
CREATE OR REPLACE PROCEDURE TPCDI_ODS.BASE.DROP_ALL_DT()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
AS 'declare
    res RESULTSET default (show dynamic tables);
    c1 CURSOR for res;
begin
    for record in c1 do
        execute immediate ''drop dynamic table '' || record."name" ;
    end for;
    return ''All dynamic tables dropped.'';
end';
	
-- Create wh database and schema
CREATE OR REPLACE DATABASE TPCDI_WH;
CREATE OR REPLACE SCHEMA TPCDI_WH.BASE;

-- Create wh helper procs
CREATE OR REPLACE PROCEDURE TPCDI_WH.BASE.DROP_ALL_DT()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
AS 'declare
	res RESULTSET default (show dynamic tables);
	c1 CURSOR for res;
begin
	for record in c1 do
		execute immediate ''drop dynamic table '' || record."name" ;
	end for;
	return ''All dynamic tables dropped.'';
end';

-- Dynamic Tables
-- Create all dynamic tables
-- Reference tables Date, Status Type
CREATE OR REPLACE DYNAMIC TABLE TPCDI_WH.BASE.DIM_DATE LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT SK_DATEID AS DATE_ID
	, DATEVALUE::DATE AS DATE_VALUE
	, DATEDESC AS DATE_DESC
	, CALENDARYEARID AS CALENDAR_YEAR_ID
	, CALENDARYEARDESC AS CALENDAR_YEAR_DESC
	, CALENDARQTRID AS CALENDAR_QTR_ID
	, CALENDARQTRDESC AS CALENDAR_QTR_DESC
	, CALENDARMONTHID AS CALENDAR_MONTH_ID
	, CALENDARMONTHDESC AS CALENDAR_MONTH_DESC
	, CALENDARWEEKID AS CALENDAR_WEEK_ID
	, CALENDARWEEKDESC AS CALENDAR_WEEK_DESC
	, DAYOFWEEKNUM AS DAY_OF_WEEK_NUM
	, DAYOFWEEKDESC AS DAY_OF_WEEK_DESC
	, FISCALYEARID AS FISCAL_YEAR_ID
	, FISCALYEARDESC AS FISCAL_YEAR_DESC
	, FISCALQTRID AS FISCAL_QTR_ID
	, FISCALQTRDESC AS FISCAL_QTR_DESC
	, HOLIDAYFLAG AS HOLIDAY_FLAG
	FROM TPCDI_STG.BASE.DATE_STG;

CREATE OR REPLACE DYNAMIC TABLE TPCDI_WH.BASE.DIM_STATUS_TYPE LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT ST_ID
	, ST_NAME
	FROM TPCDI_STG.BASE.STATUSTYPE_STG;

CREATE OR REPLACE DYNAMIC TABLE TPCDI_WH.BASE.DIM_INDUSTRY LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT IN_ID
	, IN_NAME 
	FROM TPCDI_STG.BASE.INDUSTRY_STG;
    
-- Create DT's to split FINWIRE stage into Company, Financial, and Security tables
-- Company Stage, which just does filtering and column definition
CREATE OR REPLACE DYNAMIC TABLE TPCDI_STG.BASE.FINWIRE_CMP_STG LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT TO_TIMESTAMP_NTZ(PTS,'YYYYMMDD-HH24MISS') AS PTS
	, REC_TYPE
	, COMPANY_NAME
	, CIK
	, STATUS
	, INDUSTRY_ID
	, SP_RATING
	, TRY_TO_DATE(FOUNDING_DATE) AS FOUNDING_DATE
	, ADDR_LINE1
	, ADDR_LINE2
	, POSTAL_CODE
	, CITY
	, STATE_PROVINCE
	, COUNTRY
	, CEO_NAME
	, DESCRIPTION
	FROM TPCDI_STG.BASE.FINWIRE_STG
	WHERE REC_TYPE = 'CMP';

-- Company ODS, which grabs the latest record for each CIK (not using window function)
CREATE OR REPLACE DYNAMIC TABLE TPCDI_ODS.BASE.FINWIRE_CMP_ODS LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT PTS
	, REC_TYPE
	, COMPANY_NAME
	, CIK
	, STATUS
	, INDUSTRY_ID
	, SP_RATING
	, FOUNDING_DATE
	, ADDR_LINE1
	, ADDR_LINE2
	, POSTAL_CODE
	, CITY
	, STATE_PROVINCE
	, COUNTRY
	, CEO_NAME
	, DESCRIPTION
	, PTS AS SC2_START_DATE
	, LEAD(PTS) OVER (PARTITION BY CIK ORDER BY PTS ASC) AS SC2_END_DATE
	FROM TPCDI_STG.BASE.FINWIRE_CMP_STG;

-- Financials Stage, which just does filtering and column definition
CREATE OR REPLACE DYNAMIC TABLE TPCDI_STG.BASE.FINWIRE_FIN_STG LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT TO_TIMESTAMP_NTZ(PTS,'YYYYMMDD-HH24MISS') AS PTS
	, REC_TYPE
	, TO_NUMBER(YEAR,4,0) AS YEAR
	, TO_NUMBER(QUARTER,1,0) AS QUARTER
	, TO_DATE(QTR_START_DATE, 'YYYYMMDD') AS QTR_START_DATE
	, TO_DATE(POSTING_DATE, 'YYYYMMDD') AS POSTING_DATE
	, TO_NUMBER(REVENUE,15,2) AS REVENUE
	, TO_NUMBER(EARNINGS,15,2) AS EARNINGS
	, TO_NUMBER(EPS,10,2) AS EPS
	, TO_NUMBER(DILUTED_EPS,10,2) AS DILUTED_EPS
	, TO_NUMBER(MARGIN,10,2) AS MARGIN
	, TO_NUMBER(INVENTORY,15,2) AS INVENTORY
	, TO_NUMBER(ASSETS,15,2) AS ASSETS
	, TO_NUMBER(LIABILITIES,15,2) AS LIABILITIES
	, TO_NUMBER(SH_OUT,13,0) AS SH_OUT
	, TO_NUMBER(DILUTED_SH_OUT,13,0) AS DILUTED_SH_OUT
	, CO_NAME_OR_CIK 
	FROM TPCDI_STG.BASE.FINWIRE_STG
	WHERE REC_TYPE = 'FIN';

-- Financials CIK ODS, selecting rows where CO_NAME_OR_CIK is a CIK
CREATE OR REPLACE DYNAMIC TABLE TPCDI_ODS.BASE.FINWIRE_FIN_CIK_ODS LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT PTS
	, REC_TYPE
	, YEAR
	, QUARTER
	, QTR_START_DATE
	, POSTING_DATE
	, REVENUE
	, EARNINGS
	, EPS
	, DILUTED_EPS
	, MARGIN
	, INVENTORY
	, ASSETS
	, LIABILITIES
	, SH_OUT
	, DILUTED_SH_OUT
	, CO_NAME_OR_CIK AS CIK
	FROM TPCDI_STG.BASE.FINWIRE_FIN_STG
	WHERE TRY_TO_NUMBER(CO_NAME_OR_CIK) IS NOT NULL;

-- Financials Name ODS, selecting rows where CO_NAME_OR_CIK is a CO_NAME  
CREATE OR REPLACE DYNAMIC TABLE TPCDI_ODS.BASE.FINWIRE_FIN_NAME_ODS LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT PTS
	, REC_TYPE
	, YEAR
	, QUARTER
	, QTR_START_DATE
	, POSTING_DATE
	, REVENUE
	, EARNINGS
	, EPS
	, DILUTED_EPS
	, MARGIN
	, INVENTORY
	, ASSETS
	, LIABILITIES
	, SH_OUT
	, DILUTED_SH_OUT
	, CO_NAME_OR_CIK AS NAME
	FROM TPCDI_STG.BASE.FINWIRE_FIN_STG
	WHERE TRY_TO_NUMBER(CO_NAME_OR_CIK) IS NULL;

-- Securities Stage, which just does filtering and column definition
CREATE OR REPLACE DYNAMIC TABLE TPCDI_STG.BASE.FINWIRE_SEC_STG LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT TO_TIMESTAMP_NTZ(PTS,'YYYYMMDD-HH24MISS') AS PTS
	, REC_TYPE
	, SYMBOL
	, ISSUE_TYPE
	, STATUS
	, NAME
	, EX_ID
	, TO_NUMBER(SH_OUT,13,0) AS SH_OUT
	, TO_DATE(FIRST_TRADE_DATE,'YYYYMMDD') AS FIRST_TRADE_DATE
	, TO_DATE(FIRST_TRADE_EXCHG,'YYYYMMDD') AS FIRST_TRADE_EXCHG
	, TO_NUMBER(DIVIDEND,10,2) AS DIVIDEND
	, CO_NAME_OR_CIK
	FROM TPCDI_STG.BASE.FINWIRE_STG
	WHERE REC_TYPE = 'SEC';

-- Securities CIK ODS, selecting the latest rows where CO_NAME_OR_CIK is a CIK
CREATE OR REPLACE DYNAMIC TABLE TPCDI_ODS.BASE.FINWIRE_SEC_CIK_ODS LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT PTS
	, REC_TYPE
	, SYMBOL
	, ISSUE_TYPE
	, STATUS
	, NAME
	, EX_ID
	, SH_OUT
	, FIRST_TRADE_DATE
	, FIRST_TRADE_EXCHG
	, DIVIDEND
	, CO_NAME_OR_CIK AS CIK
	, PTS AS SC2_START_DATE
	, LEAD(PTS) OVER (PARTITION BY SYMBOL ORDER BY PTS ASC) AS SC2_END_DATE
	FROM TPCDI_STG.BASE.FINWIRE_SEC_STG
	WHERE TRY_TO_NUMBER(CO_NAME_OR_CIK) IS NOT NULL;

-- Securities Name ODS, selecting the latest rows where CO_NAME_OR_CIK is a CO_NAME
CREATE OR REPLACE DYNAMIC TABLE TPCDI_ODS.BASE.FINWIRE_SEC_NAME_ODS LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT PTS
	, REC_TYPE
	, SYMBOL
	, ISSUE_TYPE
	, STATUS
	, NAME
	, EX_ID
	, SH_OUT
	, FIRST_TRADE_DATE
	, FIRST_TRADE_EXCHG
	, DIVIDEND
	, CO_NAME_OR_CIK AS CO_NAME
	, PTS AS SC2_START_DATE
	, LEAD(PTS) OVER (PARTITION BY SYMBOL ORDER BY PTS ASC) AS SC2_END_DATE
	FROM TPCDI_STG.BASE.FINWIRE_SEC_STG
	WHERE TRY_TO_NUMBER(CO_NAME_OR_CIK) IS NULL;

-- Dim Company SC2, which does table lookup, transforms, and surrogate key definition
CREATE OR REPLACE DYNAMIC TABLE TPCDI_WH.BASE.DIM_COMPANY LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT MD5(FIN.CIK::STRING || DATE_PART(epoch_second, FIN.PTS)::STRING) AS SK_COMPANY_ID
	, FIN.PTS AS LAST_UPDATE_TS
	, FIN.CIK AS COMPANY_ID
	, DIM_ST.ST_NAME AS STATUS
	, FIN.COMPANY_NAME AS NAME
	, DIM_I.IN_NAME AS INDUSTRY
	, FIN.SP_RATING
	, CASE WHEN (UPPER(SUBSTR(FIN.SP_RATING,1,1)) = 'A' OR UPPER(SUBSTR(FIN.SP_RATING,1,3)) = 'BBB') THEN 0 ELSE 1 END AS IS_LOW_GRADE
	, FIN.CEO_NAME AS CEO
	, FIN.ADDR_LINE1
	, FIN.ADDR_LINE2
	, FIN.POSTAL_CODE
	, FIN.CITY
	, FIN.STATE_PROVINCE AS STATE_PROV
	, FIN.COUNTRY
	, FIN.DESCRIPTION
	, FIN.FOUNDING_DATE
	, FIN.SC2_START_DATE
	, FIN.SC2_END_DATE
	FROM TPCDI_ODS.BASE.FINWIRE_CMP_ODS FIN
	JOIN TPCDI_WH.BASE.DIM_STATUS_TYPE DIM_ST ON FIN.STATUS = DIM_ST.ST_ID 
	JOIN TPCDI_WH.BASE.DIM_INDUSTRY DIM_I ON FIN.INDUSTRY_ID = DIM_I.IN_ID;
    
-- Dim Company SC1, which represents the most recent entire record for a Company
CREATE OR REPLACE DYNAMIC TABLE TPCDI_WH.BASE.DIM_COMPANY_NOW LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT SK_COMPANY_ID
	, LAST_UPDATE_TS
	, COMPANY_ID
	, STATUS
	, NAME
	, INDUSTRY
	, SP_RATING
	, IS_LOW_GRADE
	, CEO
	, ADDR_LINE1
	, ADDR_LINE2
	, POSTAL_CODE
	, CITY
	, STATE_PROV
	, COUNTRY
	, DESCRIPTION
	, FOUNDING_DATE
	FROM TPCDI_WH.BASE.DIM_COMPANY
	WHERE SC2_END_DATE IS NULL;

-- Dim Financials, which unions CIK and NAME ODS tables and does lookup for key
CREATE OR REPLACE DYNAMIC TABLE TPCDI_WH.BASE.DIM_FINANCIAL LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
SELECT DIM_C.SK_COMPANY_ID
	, FIN.YEAR AS FI_YEAR
	, FIN.QUARTER AS FI_QTR
	, FIN.QTR_START_DATE AS FI_QTR_START_DATE
	, FIN.REVENUE AS FI_REVENUE
	, FIN.EARNINGS AS FI_NET_EARN
	, FIN.EPS AS FI_BASIC_EPS
	, FIN.DILUTED_EPS AS FI_DILUT_EPS
	, FIN.MARGIN AS FI_MARGIN
	, FIN.INVENTORY AS FI_INVENTORY
	, FIN.ASSETS AS FI_ASSETS
	, FIN.LIABILITIES AS FI_LIABILITY
	, FIN.SH_OUT AS FI_OUT_BASIC
	, FIN.DILUTED_SH_OUT AS FI_OUT_DILUT
	FROM TPCDI_ODS.BASE.FINWIRE_FIN_NAME_ODS FIN
	JOIN TPCDI_WH.BASE.DIM_COMPANY_NOW DIM_C ON DIM_C.NAME = FIN.NAME
UNION ALL 
SELECT DIM_C.SK_COMPANY_ID
	, FIN.YEAR AS FI_YEAR
	, FIN.QUARTER AS FI_QTR
	, FIN.QTR_START_DATE AS FI_QTR_START_DATE
	, FIN.REVENUE AS FI_REVENUE
	, FIN.EARNINGS AS FI_NET_EARN
	, FIN.EPS AS FI_BASIC_EPS
	, FIN.DILUTED_EPS AS FI_DILUT_EPS
	, FIN.MARGIN AS FI_MARGIN
	, FIN.INVENTORY AS FI_INVENTORY
	, FIN.ASSETS AS FI_ASSETS
	, FIN.LIABILITIES AS FI_LIABILITY
	, FIN.SH_OUT AS FI_OUT_BASIC
	, FIN.DILUTED_SH_OUT AS FI_OUT_DILUT
	FROM TPCDI_ODS.BASE.FINWIRE_FIN_CIK_ODS FIN
	JOIN TPCDI_WH.BASE.DIM_COMPANY_NOW DIM_C ON DIM_C.COMPANY_ID = FIN.CIK;

-- Intermediate table that recalculates EPS period line items based on latest data
CREATE OR REPLACE DYNAMIC TABLE TPCDI_WH.BASE.DIM_FINANCIAL_ROLL_YEAR_EPS_DETAILS LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
SELECT DIM_F1.SK_COMPANY_ID
	, DIM_F2.SK_COMPANY_ID AS SK_ROLLING_COMPANY_ID
	, DIM_F1.FI_QTR_START_DATE AS FI_ROLLING_PERIOD_END_DATE
	, DIM_F2.FI_QTR_START_DATE
	, DIM_F1.FI_BASIC_EPS
	, DIM_F2.FI_BASIC_EPS AS ROLLING_PERIOD_EPS
	FROM TPCDI_WH.BASE.DIM_FINANCIAL DIM_F1
	JOIN TPCDI_WH.BASE.DIM_FINANCIAL DIM_F2 ON DIM_F1.SK_COMPANY_ID = DIM_F2.SK_COMPANY_ID
	AND DIM_F1.FI_QTR_START_DATE >= DIM_F2.FI_QTR_START_DATE
	AND DIM_F1.FI_QTR_START_DATE <= DATEADD(quarter,3,DIM_F2.FI_QTR_START_DATE)
	ORDER BY 1,3,4;

-- Intermediate table that recalculates rolling year EPS based on latest data
CREATE OR REPLACE DYNAMIC TABLE TPCDI_WH.BASE.DIM_FINANCIAL_ROLL_YEAR_EPS LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT SK_COMPANY_ID
	, YEAR(FI_ROLLING_PERIOD_END_DATE)::STRING || QUARTER(FI_ROLLING_PERIOD_END_DATE)::STRING AS YEAR_QTR
	, SUM(ROLLING_PERIOD_EPS) AS ROLL_YEAR_EPS 
	FROM TPCDI_WH.BASE.DIM_FINANCIAL_ROLL_YEAR_EPS_DETAILS
	GROUP BY 1,2 ORDER BY 1,2;

-- Dim Securities SC2, which unions CIK and NAME ODS tables, does lookups, and generates surrogate key
CREATE OR REPLACE DYNAMIC TABLE TPCDI_WH.BASE.DIM_SECURITY LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT MD5(FIN.SYMBOL || DATE_PART(epoch_second, FIN.PTS)::STRING) AS SK_SECURITY_ID
	, FIN.SYMBOL
	, FIN.PTS AS LAST_UPDATE_TS
	, FIN.ISSUE_TYPE AS ISSUE
	, ST.ST_NAME AS STATUS
	, FIN.NAME
	, FIN.EX_ID AS EXCHANGE_ID
	, DIM_C.SK_COMPANY_ID AS SK_COMPANY_ID
	, FIN.SH_OUT AS SHARES_OUTSTANDING
	, FIN.FIRST_TRADE_DATE AS FIRST_TRADE
	, FIN.FIRST_TRADE_EXCHG AS FIRST_TRADE_ON_EXCHANGE
	, FIN.DIVIDEND
	, FIN.SC2_START_DATE
	, FIN.SC2_END_DATE
	FROM TPCDI_ODS.BASE.FINWIRE_SEC_CIK_ODS FIN
	JOIN TPCDI_WH.BASE.DIM_STATUS_TYPE ST ON FIN.STATUS = ST.ST_ID
	JOIN TPCDI_WH.BASE.DIM_COMPANY_NOW DIM_C ON FIN.CIK = DIM_C.COMPANY_ID
	UNION ALL
	SELECT MD5(FIN.SYMBOL || DATE_PART(epoch_second, FIN.PTS)::STRING) AS SK_SECURITY_ID
	, FIN.SYMBOL
	, FIN.PTS AS LAST_UPDATE_TS
	, FIN.ISSUE_TYPE AS ISSUE
	, ST.ST_NAME AS STATUS
	, FIN.NAME
	, FIN.EX_ID AS EXCHANGE_ID
	, DIM_C.SK_COMPANY_ID AS SK_COMPANY_ID
	, FIN.SH_OUT AS SHARES_OUTSTANDING
	, FIN.FIRST_TRADE_DATE AS FIRST_TRADE
	, FIN.FIRST_TRADE_EXCHG AS FIRST_TRADE_ON_EXCHANGE
	, FIN.DIVIDEND
	, FIN.SC2_START_DATE
	, FIN.SC2_END_DATE  
	FROM TPCDI_ODS.BASE.FINWIRE_SEC_NAME_ODS FIN
	JOIN TPCDI_WH.BASE.DIM_STATUS_TYPE ST ON FIN.STATUS = ST.ST_ID
	JOIN TPCDI_WH.BASE.DIM_COMPANY_NOW DIM_C ON FIN.CO_NAME = DIM_C.NAME;

-- Dim Security SC1, which represents the most recent entire record for a Security
CREATE OR REPLACE DYNAMIC TABLE TPCDI_WH.BASE.DIM_SECURITY_NOW LAG='1 MINUTE' WAREHOUSE='TPCDI_DT_WH' AS
	SELECT SK_SECURITY_ID
	, SYMBOL
	, LAST_UPDATE_TS
	, ISSUE
	, STATUS
	, NAME
	, EXCHANGE_ID
	, SK_COMPANY_ID
	, SHARES_OUTSTANDING
	, FIRST_TRADE
	, FIRST_TRADE_ON_EXCHANGE
	, DIVIDEND
	FROM TPCDI_WH.BASE.DIM_SECURITY
	WHERE SC2_END_DATE IS NULL;  